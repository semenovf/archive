# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_unix32
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug_unix32)
  RESCOMP = windres
  TARGETDIR = ../../.build
  TARGET = $(TARGETDIR)/libpfs-debby-d.so
  OBJDIR = ../../.build/pfs-debby/pfs-debby/debug/unix32
  DEFINES += -DDEBUG
  INCLUDES += -I../include -I../../pfs/include -I../../pfs-sys/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -Werror -g -fPIC
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CFLAGS)
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lpfs-d -lpfs-sys-d
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -L../../.build -m32 -shared
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

GBS_INSTALL_FILE    = install -D -m 644 -p
GBS_INSTALL_BIN     = install -D -m 755 -p
GBS_INSTALL_DIR     = cp -f -R
GBS_DEL_FILE        = rm -f
GBS_SYMLINK         = ln -f -s
GBS_DEL_DIR         = rmdir
GBS_BASENAME        = basename

GBS_MAJOR_VER       = 1
GBS_MINOR_VER       = 0
GBS_RELEASE         = 0
GBS_TARGETNAME      = $(shell $(GBS_BASENAME) $(TARGET))
GBS_TARGET0         = ${HOME}/lib/$(GBS_TARGETNAME)
GBS_TARGET1         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER)
GBS_TARGET2         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER).$(GBS_MINOR_VER)
GBS_TARGET3         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER).$(GBS_MINOR_VER).$(GBS_RELEASE)

install: all
	$(GBS_INSTALL_BIN)  $(TARGET) $(GBS_TARGET3)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET2)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET1)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET0)
	$(GBS_INSTALL_DIR) ../include ${HOME}/include

uninstall:
	$(GBS_DEL_FILE) $(GBS_TARGET0)
	$(GBS_DEL_FILE) $(GBS_TARGET1)
	$(GBS_DEL_FILE) $(GBS_TARGET2)
	$(GBS_DEL_FILE) $(GBS_TARGET3)


endif

ifeq ($(config),debug_unix64)
  RESCOMP = windres
  TARGETDIR = ../../.build
  TARGET = $(TARGETDIR)/libpfs-debby-d.so
  OBJDIR = ../../.build/pfs-debby/pfs-debby/debug/unix64
  DEFINES += -DDEBUG
  INCLUDES += -I../include -I../../pfs/include -I../../pfs-sys/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -Werror -g -fPIC
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CFLAGS)
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lpfs-d -lpfs-sys-d
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -L../../.build -m64 -shared
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

GBS_INSTALL_FILE    = install -D -m 644 -p
GBS_INSTALL_BIN     = install -D -m 755 -p
GBS_INSTALL_DIR     = cp -f -R
GBS_DEL_FILE        = rm -f
GBS_SYMLINK         = ln -f -s
GBS_DEL_DIR         = rmdir
GBS_BASENAME        = basename

GBS_MAJOR_VER       = 1
GBS_MINOR_VER       = 0
GBS_RELEASE         = 0
GBS_TARGETNAME      = $(shell $(GBS_BASENAME) $(TARGET))
GBS_TARGET0         = ${HOME}/lib/$(GBS_TARGETNAME)
GBS_TARGET1         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER)
GBS_TARGET2         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER).$(GBS_MINOR_VER)
GBS_TARGET3         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER).$(GBS_MINOR_VER).$(GBS_RELEASE)

install: all
	$(GBS_INSTALL_BIN)  $(TARGET) $(GBS_TARGET3)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET2)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET1)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET0)
	$(GBS_INSTALL_DIR) ../include ${HOME}/include

uninstall:
	$(GBS_DEL_FILE) $(GBS_TARGET0)
	$(GBS_DEL_FILE) $(GBS_TARGET1)
	$(GBS_DEL_FILE) $(GBS_TARGET2)
	$(GBS_DEL_FILE) $(GBS_TARGET3)


endif

ifeq ($(config),debug_mswin32)
  RESCOMP = windres
  TARGETDIR = ../../.build
  TARGET = $(TARGETDIR)/libpfs-debby-d.so
  OBJDIR = ../../.build/pfs-debby/pfs-debby/debug/mswin32
  DEFINES += -DDEBUG
  INCLUDES += -I../include -I../../pfs/include -I../../pfs-sys/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -Werror -g -fPIC
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CFLAGS)
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lpfs-d -lpfs-sys-d
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -L../../.build -m32 -shared
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

GBS_INSTALL_FILE    = install -D -m 644 -p
GBS_INSTALL_BIN     = install -D -m 755 -p
GBS_INSTALL_DIR     = cp -f -R
GBS_DEL_FILE        = rm -f
GBS_SYMLINK         = ln -f -s
GBS_DEL_DIR         = rmdir
GBS_BASENAME        = basename

GBS_MAJOR_VER       = 1
GBS_MINOR_VER       = 0
GBS_RELEASE         = 0
GBS_TARGETNAME      = $(shell $(GBS_BASENAME) $(TARGET))
GBS_TARGET0         = ${HOME}/lib/$(GBS_TARGETNAME)
GBS_TARGET1         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER)
GBS_TARGET2         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER).$(GBS_MINOR_VER)
GBS_TARGET3         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER).$(GBS_MINOR_VER).$(GBS_RELEASE)

install: all
	$(GBS_INSTALL_BIN)  $(TARGET) $(GBS_TARGET3)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET2)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET1)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET0)
	$(GBS_INSTALL_DIR) ../include ${HOME}/include

uninstall:
	$(GBS_DEL_FILE) $(GBS_TARGET0)
	$(GBS_DEL_FILE) $(GBS_TARGET1)
	$(GBS_DEL_FILE) $(GBS_TARGET2)
	$(GBS_DEL_FILE) $(GBS_TARGET3)


endif

ifeq ($(config),debug_mswin64)
  RESCOMP = windres
  TARGETDIR = ../../.build
  TARGET = $(TARGETDIR)/libpfs-debby-d.so
  OBJDIR = ../../.build/pfs-debby/pfs-debby/debug/mswin64
  DEFINES += -DDEBUG
  INCLUDES += -I../include -I../../pfs/include -I../../pfs-sys/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -Werror -g -fPIC
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CFLAGS)
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lpfs-d -lpfs-sys-d
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -L../../.build -m64 -shared
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

GBS_INSTALL_FILE    = install -D -m 644 -p
GBS_INSTALL_BIN     = install -D -m 755 -p
GBS_INSTALL_DIR     = cp -f -R
GBS_DEL_FILE        = rm -f
GBS_SYMLINK         = ln -f -s
GBS_DEL_DIR         = rmdir
GBS_BASENAME        = basename

GBS_MAJOR_VER       = 1
GBS_MINOR_VER       = 0
GBS_RELEASE         = 0
GBS_TARGETNAME      = $(shell $(GBS_BASENAME) $(TARGET))
GBS_TARGET0         = ${HOME}/lib/$(GBS_TARGETNAME)
GBS_TARGET1         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER)
GBS_TARGET2         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER).$(GBS_MINOR_VER)
GBS_TARGET3         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER).$(GBS_MINOR_VER).$(GBS_RELEASE)

install: all
	$(GBS_INSTALL_BIN)  $(TARGET) $(GBS_TARGET3)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET2)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET1)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET0)
	$(GBS_INSTALL_DIR) ../include ${HOME}/include

uninstall:
	$(GBS_DEL_FILE) $(GBS_TARGET0)
	$(GBS_DEL_FILE) $(GBS_TARGET1)
	$(GBS_DEL_FILE) $(GBS_TARGET2)
	$(GBS_DEL_FILE) $(GBS_TARGET3)


endif

ifeq ($(config),release_unix32)
  RESCOMP = windres
  TARGETDIR = ../../.build
  TARGET = $(TARGETDIR)/libpfs-debby.so
  OBJDIR = ../../.build/pfs-debby/pfs-debby/release/unix32
  DEFINES += -DNDEBUG
  INCLUDES += -I../include -I../../pfs/include -I../../pfs-sys/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -Werror -fPIC
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CFLAGS)
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lpfs -lpfs-sys
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -L../../.build -m32 -s -shared
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

GBS_INSTALL_FILE    = install -D -m 644 -p
GBS_INSTALL_BIN     = install -D -m 755 -p
GBS_INSTALL_DIR     = cp -f -R
GBS_DEL_FILE        = rm -f
GBS_SYMLINK         = ln -f -s
GBS_DEL_DIR         = rmdir
GBS_BASENAME        = basename

GBS_MAJOR_VER       = 1
GBS_MINOR_VER       = 0
GBS_RELEASE         = 0
GBS_TARGETNAME      = $(shell $(GBS_BASENAME) $(TARGET))
GBS_TARGET0         = ${HOME}/lib/$(GBS_TARGETNAME)
GBS_TARGET1         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER)
GBS_TARGET2         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER).$(GBS_MINOR_VER)
GBS_TARGET3         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER).$(GBS_MINOR_VER).$(GBS_RELEASE)

install: all
	$(GBS_INSTALL_BIN)  $(TARGET) $(GBS_TARGET3)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET2)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET1)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET0)
	$(GBS_INSTALL_DIR) ../include ${HOME}/include

uninstall:
	$(GBS_DEL_FILE) $(GBS_TARGET0)
	$(GBS_DEL_FILE) $(GBS_TARGET1)
	$(GBS_DEL_FILE) $(GBS_TARGET2)
	$(GBS_DEL_FILE) $(GBS_TARGET3)


endif

ifeq ($(config),release_unix64)
  RESCOMP = windres
  TARGETDIR = ../../.build
  TARGET = $(TARGETDIR)/libpfs-debby.so
  OBJDIR = ../../.build/pfs-debby/pfs-debby/release/unix64
  DEFINES += -DNDEBUG
  INCLUDES += -I../include -I../../pfs/include -I../../pfs-sys/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -Werror -fPIC
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CFLAGS)
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lpfs -lpfs-sys
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -L../../.build -m64 -s -shared
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

GBS_INSTALL_FILE    = install -D -m 644 -p
GBS_INSTALL_BIN     = install -D -m 755 -p
GBS_INSTALL_DIR     = cp -f -R
GBS_DEL_FILE        = rm -f
GBS_SYMLINK         = ln -f -s
GBS_DEL_DIR         = rmdir
GBS_BASENAME        = basename

GBS_MAJOR_VER       = 1
GBS_MINOR_VER       = 0
GBS_RELEASE         = 0
GBS_TARGETNAME      = $(shell $(GBS_BASENAME) $(TARGET))
GBS_TARGET0         = ${HOME}/lib/$(GBS_TARGETNAME)
GBS_TARGET1         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER)
GBS_TARGET2         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER).$(GBS_MINOR_VER)
GBS_TARGET3         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER).$(GBS_MINOR_VER).$(GBS_RELEASE)

install: all
	$(GBS_INSTALL_BIN)  $(TARGET) $(GBS_TARGET3)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET2)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET1)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET0)
	$(GBS_INSTALL_DIR) ../include ${HOME}/include

uninstall:
	$(GBS_DEL_FILE) $(GBS_TARGET0)
	$(GBS_DEL_FILE) $(GBS_TARGET1)
	$(GBS_DEL_FILE) $(GBS_TARGET2)
	$(GBS_DEL_FILE) $(GBS_TARGET3)


endif

ifeq ($(config),release_mswin32)
  RESCOMP = windres
  TARGETDIR = ../../.build
  TARGET = $(TARGETDIR)/libpfs-debby.so
  OBJDIR = ../../.build/pfs-debby/pfs-debby/release/mswin32
  DEFINES += -DNDEBUG
  INCLUDES += -I../include -I../../pfs/include -I../../pfs-sys/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -Werror -fPIC
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CFLAGS)
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lpfs -lpfs-sys
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib32 -L../../.build -m32 -s -shared
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

GBS_INSTALL_FILE    = install -D -m 644 -p
GBS_INSTALL_BIN     = install -D -m 755 -p
GBS_INSTALL_DIR     = cp -f -R
GBS_DEL_FILE        = rm -f
GBS_SYMLINK         = ln -f -s
GBS_DEL_DIR         = rmdir
GBS_BASENAME        = basename

GBS_MAJOR_VER       = 1
GBS_MINOR_VER       = 0
GBS_RELEASE         = 0
GBS_TARGETNAME      = $(shell $(GBS_BASENAME) $(TARGET))
GBS_TARGET0         = ${HOME}/lib/$(GBS_TARGETNAME)
GBS_TARGET1         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER)
GBS_TARGET2         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER).$(GBS_MINOR_VER)
GBS_TARGET3         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER).$(GBS_MINOR_VER).$(GBS_RELEASE)

install: all
	$(GBS_INSTALL_BIN)  $(TARGET) $(GBS_TARGET3)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET2)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET1)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET0)
	$(GBS_INSTALL_DIR) ../include ${HOME}/include

uninstall:
	$(GBS_DEL_FILE) $(GBS_TARGET0)
	$(GBS_DEL_FILE) $(GBS_TARGET1)
	$(GBS_DEL_FILE) $(GBS_TARGET2)
	$(GBS_DEL_FILE) $(GBS_TARGET3)


endif

ifeq ($(config),release_mswin64)
  RESCOMP = windres
  TARGETDIR = ../../.build
  TARGET = $(TARGETDIR)/libpfs-debby.so
  OBJDIR = ../../.build/pfs-debby/pfs-debby/release/mswin64
  DEFINES += -DNDEBUG
  INCLUDES += -I../include -I../../pfs/include -I../../pfs-sys/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -Werror -fPIC
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CFLAGS)
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lpfs -lpfs-sys
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -L../../.build -m64 -s -shared
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

GBS_INSTALL_FILE    = install -D -m 644 -p
GBS_INSTALL_BIN     = install -D -m 755 -p
GBS_INSTALL_DIR     = cp -f -R
GBS_DEL_FILE        = rm -f
GBS_SYMLINK         = ln -f -s
GBS_DEL_DIR         = rmdir
GBS_BASENAME        = basename

GBS_MAJOR_VER       = 1
GBS_MINOR_VER       = 0
GBS_RELEASE         = 0
GBS_TARGETNAME      = $(shell $(GBS_BASENAME) $(TARGET))
GBS_TARGET0         = ${HOME}/lib/$(GBS_TARGETNAME)
GBS_TARGET1         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER)
GBS_TARGET2         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER).$(GBS_MINOR_VER)
GBS_TARGET3         = ${HOME}/lib/$(GBS_TARGETNAME).$(GBS_MAJOR_VER).$(GBS_MINOR_VER).$(GBS_RELEASE)

install: all
	$(GBS_INSTALL_BIN)  $(TARGET) $(GBS_TARGET3)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET2)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET1)
	$(GBS_SYMLINK) $(GBS_TARGET3) $(GBS_TARGET0)
	$(GBS_INSTALL_DIR) ../include ${HOME}/include

uninstall:
	$(GBS_DEL_FILE) $(GBS_TARGET0)
	$(GBS_DEL_FILE) $(GBS_TARGET1)
	$(GBS_DEL_FILE) $(GBS_TARGET2)
	$(GBS_DEL_FILE) $(GBS_TARGET3)


endif

OBJECTS := \
	$(OBJDIR)/database.o \
	$(OBJDIR)/debby.o \
	$(OBJDIR)/schema.o \
	$(OBJDIR)/statement.o \

RESOURCES := \

CUSTOMFILES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES) ${CUSTOMFILES}
	@echo Linking pfs-debby
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning pfs-debby
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH)
$(GCH): $(PCH)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
endif

$(OBJDIR)/database.o: ../src/pfs-debby/database.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/debby.o: ../src/pfs-debby/debby.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/schema.o: ../src/pfs-debby/schema.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/statement.o: ../src/pfs-debby/statement.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif
