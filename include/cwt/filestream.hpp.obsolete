/**
 * @file   filestream.hpp
 * @author wladt
 * @date   Feb 28, 2013 11:53:25 AM
 *
 * @brief
 */

#ifdef __OBSOLETE__

#ifndef __CWT_FILESTREAM_HPP__
#define __CWT_FILESTREAM_HPP__

#include <cwt/cwt.h>
//#include <cwt/string.hpp>
//#include <cwt/bytearray.hpp>
#include <cwt/inputstream.hpp>
#include <cwt/outputstream.hpp>
#include <cwt/file.hpp>

CWT_NS_BEGIN

class FileInputStream : public InputStream {
public:
	FileInputStream(const String &filename);
	FileInputStream(const char *filename);
	FileInputStream(int fd) : m_fd(fd) { close(); }
	~FileInputStream() { close(); }

	virtual bool isNull() const { return m_fd < 0 ? true: false; }
	virtual ssize_t available();
	virtual void close();
	virtual ssize_t read(char bytes[], size_t szMax);

	ByteArray readAll();

private:
	int    m_fd;
};


class FileOutputStream : public OutputStream {
public:
	FileOutputStream(const String &filename, bool append = true);
	FileOutputStream(const char *filename, bool append = true);
	virtual ~FileOutputStream() {}

	virtual bool isNull() const { return m_fd < 0 ? true: false;  }
	virtual void close();
	virtual void flush();
	virtual ssize_t write(const char bytes[], size_t sz);
private:
	int    m_fd;
};

CWT_NS_END

#endif /* __CWT_FILESTREAM_HPP__ */

#endif
