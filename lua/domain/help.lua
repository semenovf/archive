function usage ()
    print("NAME");
    print("    gbs - utitlity for manage development environment");
    print("");
    print("SYNOPSYS");
    print("    gbs DOMAIN [ACTION [OPTIONS]]");
    print("");
    print("    (1) gbs help");
    print("    (2) gbs workspace create WORKSPACE_PATH");
    print("    (3) gbs ws create WORKSPACE_PATH");
    print("    (4) gbs solution create SOLUTION_NAME [GIT_OPTIONS]");
    print("    (5) gbs sepaloid create SEPALOID_NAME --sepaloid=SEPALOID_PREDEFINED_SET");
    print("    (6) gbs sepaloid create SEPALOID_NAME [--petaloid=PETALOID_NAME [--petaloid=PETALOID_NAME ...]]");
    print("    (7) gbs project create PROJECT_NAME --project-type=PROJECT_TYPE");
--    print("    (8) gbs --create-ws=PATH[-c|-create|--create] [-sepaloid|--sepaloid] [GIT_OPTIONS] SOLUTIONNAME");
    print("");
    print("DOMAINS (and synonims)");
    print("    help");
    print("    workspace (ws)");
    print("    solution");
    print("    sepaloid");
    print("    project");
    print("");
    print("DESCRIPTION");
    print("    (1)        - output this help and exit");
    print("    (2) or (3) - create workspace at specified directory WORKSPACE_PATH");
    print("    (4)        - create solution with name SOLUTION_NAME and type SOLUTION_TYPE");
    print("");
    print("ARGUMENTS");
    print("    WORKSPACE_PATH  - valid file system path for directory");
    print("    SOLUTION_NAME   - valid file system name for directory (not to be confused with full directory path)");
    print("    SEPALOID_NAME   - valid file system name for directory");
    print("    SEPALOID_PREDEFINED_SET - one of { default | gui-qt4 }");
    print("    PETALOID_NAME   - valid file system name for directory");
    print("    PROJECT_NAME    - valid file system name for directory");
    print("    PROJECT_TYPE    - one of { app | lib | static | example | test }");
    print("    GIT_OPTIONS     - options specific for 'git' revision control system. See 'GIT OPTIONS' section");
    print("");
    print("GIT OPTIONS");
    print("    --git");
    print("        initialize only git local repo");
    print("    --git-hosting-github");
    print("        initialize git local repo and synchronize it with remote repository"); 
    print("        on GitHub (must be created previously)");
    print("    --git-hosting-bitbucket");
    print("        initialize git local repo and synchronize it with remote repository");
    print("        on Bitbucket (must be created previously)");
end
