/*
 * utf16.cpp
 *
 *  Created on: 31 мая 2015 г.
 *      Author: wladt
 */


#include <pfs/test/test.hpp>
#include <pfs/ucchar.hpp>
#include <pfs/string.hpp>
#include <cstring>
#include <iostream>

using namespace std;

const uint16_t latin1_alphabet_utf16[] = { // 1-word utf16 encoding
		  0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047, 0x0048, 0x0049
		, 0x004A, 0x004B, 0x004C, 0x004D, 0x004E, 0x004F, 0x0050, 0x0051, 0x0052
		, 0x0053, 0x0054, 0x0055, 0x0056, 0x0057, 0x0058, 0x0059, 0x005A, 0x0061
		, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, 0x0068, 0x0069, 0x006A
		, 0x006B, 0x006C, 0x006D, 0x006E, 0x006F, 0x0070, 0x0071, 0x0072, 0x0073
		, 0x0074, 0x0075, 0x0076, 0x0077, 0x0078, 0x0079, 0x007A
};

static const size_t LatinAlphabetCount = 26;

const uint16_t cyrillic_alphabet_utf16[] = { // 1-word utf16 encoding
	      0xD090, 0xD091, 0xD092, 0xD093, 0xD094, 0xD095, 0xD081, 0xD096
		, 0xD097, 0xD098, 0xD099, 0xD09A, 0xD09B, 0xD09C, 0xD09D, 0xD09E
		, 0xD09F, 0xD0A0, 0xD0A1, 0xD0A2, 0xD0A3, 0xD0A4, 0xD0A5, 0xD0A6
		, 0xD0A7, 0xD0A8, 0xD0A9, 0xD0AA, 0xD0AB, 0xD0AC, 0xD0AD, 0xD0AE
		, 0xD0AF, 0xD0B0, 0xD0B1, 0xD0B2, 0xD0B3, 0xD0B4, 0xD0B5, 0xD191
		, 0xD0B6, 0xD0B7, 0xD0B8, 0xD0B9, 0xD0BA, 0xD0BB, 0xD0BC, 0xD0BD
		, 0xD0BE, 0xD0BF, 0xD180, 0xD181, 0xD182, 0xD183, 0xD184, 0xD185
		, 0xD186, 0xD187, 0xD188, 0xD189, 0xD18A, 0xD18B, 0xD18C, 0xD18D
		, 0xD18E, 0xD18F
};

static const size_t CyrillicAlphabetCount = 33;

int main(int argc, char *argv[])
{
    PFS_UNUSED2(argc, argv);
	BEGIN_TESTS(6);

	size_t latin1_size = sizeof(latin1_alphabet_utf16)/sizeof(latin1_alphabet_utf16[0]);
	size_t cyrillic_size = sizeof(cyrillic_alphabet_utf16)/sizeof(cyrillic_alphabet_utf16[0]);

	// Convert as latin1
	pfs::utf16_string latin1
		= pfs::utf16_string::fromUtf16(latin1_alphabet_utf16, latin1_size);

	TEST_OK(latin1_size == LatinAlphabetCount * 2);
	TEST_OK(latin1.size() == latin1_size);
	TEST_OK(latin1.length() == LatinAlphabetCount * 2);

	pfs::utf16_string cyrillic
		= pfs::utf16_string::fromUtf16(cyrillic_alphabet_utf16, cyrillic_size);
	TEST_OK(cyrillic_size == CyrillicAlphabetCount * 2);
	TEST_OK(cyrillic.size() == cyrillic_size);
	TEST_OK(cyrillic.length() == CyrillicAlphabetCount * 2);

    END_TESTS;
}
